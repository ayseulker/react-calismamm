{"ast":null,"code":"var _jsxFileName = \"/Users/siddiksefa/Desktop/react-calismamm/video-10/src/companents/Collapse.js\";\n/*\n ilk constructor çalışır daha sonra staten ilk durumu belirlenir sonra render metodu ilk defa çalışır onclick eventi çalıştırılarak showMore metodu çalıştırılır.\nset state nesnesini güncelledi --render metodunu tekrar çalıştırdı\nrender metodu güncel jsx i sayfada gösterdi \n**/\nimport React from 'react';\n\n//! react özellikleri collapse companenta tanımlamak için class Collapse extends React.Component şeklinde yazılır\n\n/*\n\nclass Collapse extends React.Component {\n    \n    constructor(){\n        super();\n\n        this.state = {\n            showContent : \"test content\"\n        }\n    }\n\n    render(){\n       \n        return (\n            <div>\n                <a className='btn btn-primary w-100' data-toggle=\"collapse\" href={\"#\".concat(this.props.href)} role=\"button\" aria-expanded=\"false\" aria-controls='collapseExample'>\n                Link with href\n                </a>\n                <div className='collapse show' id={this.props.href}>\n                {this.props.children}\n                {this.state.showContent}\n                </div>\n            </div>\n        );\n    }\n   \n};\n\n\n\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Collapse extends React.Component {\n  constructor() {\n    super();\n    /* \n        showMore() {\n            this.setState({ showContent: true })\n        }\n         showmore constructor içinde tanımlanmadığı için this algılanamıyor ve onclick evente tanımlanamadı çıktısı alınıyor\n        constructora metodları yazmak kod okumasını zorlaştırır o yüzden her seferinde metodun construct\n         .//! bizim amacımız kendi oluşturduğumuz class metodunun componenta ait olan nesneye ulaşması isteniyor. bind kullanılarak problem ortadan kalkıyor\n            .//? this.showMore = this.showMore.bind(this) şeklinde hata ortadan kalkar ve onclick eventi çalışmaya başlar. fakat showmore içerisine showContent true olarak kaydedildiği için butona basıldığında sadece açılır tekrar kapanmaz.\n         */\n    this.showMore = () => {\n      this.setState({\n        showContent: this.state.showContent\n      });\n    };\n    this.state = {\n      showContent: fals\n    };\n\n    /*\n       this.showMore = () => {\n          console.log(this)\n       } \n       */\n\n    /** this.showMore = this.showMore.bind(this)  */\n  }\n\n  //! arrow function kullanarak metot oluşturduğumuzda collapse compenenti ile  direk bağlantı sağlanıyor.\n  // setState metodu kullanılıyor çünkü bu metot kullanıldıktan sonra sayfa render  ediliyor. kullanılmazsa sayfa render edilmez    \n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"btn btn-primary w-100\",\n        onClick: this.showMore,\n        children: \"Link with href\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), this.state.showContent ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"collapse show\",\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n}\n;\nexport default Collapse;\n\n//! bir component oluşturulduğunda state in ilk değer veriye sahip olması gerekiyor.\n\n//? construtor içerisine state de kullanılacak ilk depğer oluşturulur\n\n//propsları değiştirilemeyen veriler için gönderirken state leri değiştirilebilir veriler için kullanılır\n\n// {this.props.children} = prop çağırma yöntemi\n// {this.state.showContent} = state çağırma yöntemi\n\n/*\n<a className='btn btn-primary w-100' data-toggle=\"collapse\" href={\"#\".concat(this.props.href)} role=\"button\" aria-expanded=\"false\" aria-controls='collapseExample'>\n    * boostrap hazır kodlarıyla kartların  açık olup olmayacağına karar veiyoruz\n*/\n\n/*\n{\n    this.state.showContent ? (\n        <div className='collapse show'>\n        {this.props.children}\n    \n       </div>\n    ) : null   \n}  * if döngüsü kurup  this.state = {\n    showContent : false\n} **durumuna göre  kartlar açık veya kapalı olacağı ayarlanacak\n\n*/","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Collapse","Component","constructor","showMore","setState","showContent","state","fals","render","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","props"],"sources":["/Users/siddiksefa/Desktop/react-calismamm/video-10/src/companents/Collapse.js"],"sourcesContent":["/*\n ilk constructor çalışır daha sonra staten ilk durumu belirlenir sonra render metodu ilk defa çalışır onclick eventi çalıştırılarak showMore metodu çalıştırılır.\nset state nesnesini güncelledi --render metodunu tekrar çalıştırdı\nrender metodu güncel jsx i sayfada gösterdi \n**/\nimport React from 'react';\n\n//! react özellikleri collapse companenta tanımlamak için class Collapse extends React.Component şeklinde yazılır\n\n/*\n\nclass Collapse extends React.Component {\n    \n    constructor(){\n        super();\n\n        this.state = {\n            showContent : \"test content\"\n        }\n    }\n\n    render(){\n       \n        return (\n            <div>\n                <a className='btn btn-primary w-100' data-toggle=\"collapse\" href={\"#\".concat(this.props.href)} role=\"button\" aria-expanded=\"false\" aria-controls='collapseExample'>\n                Link with href\n                </a>\n                <div className='collapse show' id={this.props.href}>\n                {this.props.children}\n                {this.state.showContent}\n                </div>\n            </div>\n        );\n    }\n   \n};\n\n\n\n*/\n\nclass Collapse extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            showContent: fals\n        }\n\n        /*\n           this.showMore = () => {\n              console.log(this)\n           } \n           */\n\n\n       /** this.showMore = this.showMore.bind(this)  */\n\n    }\n/* \n    showMore() {\n        this.setState({ showContent: true })\n    }\n     showmore constructor içinde tanımlanmadığı için this algılanamıyor ve onclick evente tanımlanamadı çıktısı alınıyor\n    constructora metodları yazmak kod okumasını zorlaştırır o yüzden her seferinde metodun construct\n     .//! bizim amacımız kendi oluşturduğumuz class metodunun componenta ait olan nesneye ulaşması isteniyor. bind kullanılarak problem ortadan kalkıyor\n        .//? this.showMore = this.showMore.bind(this) şeklinde hata ortadan kalkar ve onclick eventi çalışmaya başlar. fakat showmore içerisine showContent true olarak kaydedildiği için butona basıldığında sadece açılır tekrar kapanmaz.\n     */\n\n\n    showMore = () => {\n        this.setState({ showContent: this.state.showContent })\n    }\n//! arrow function kullanarak metot oluşturduğumuzda collapse compenenti ile  direk bağlantı sağlanıyor.\n// setState metodu kullanılıyor çünkü bu metot kullanıldıktan sonra sayfa render  ediliyor. kullanılmazsa sayfa render edilmez    \n\nrender() {\n\n        return (\n            <div>\n                <a className='btn btn-primary w-100' onClick={this.showMore} >\n                    Link with href\n                </a>\n\n                {\n                    this.state.showContent ? (\n                        <div className='collapse show'>\n                            {this.props.children}\n\n                        </div>\n                    ) : null\n                }\n\n\n            </div>\n        );\n    }\n\n};\n\n\nexport default Collapse;\n\n//! bir component oluşturulduğunda state in ilk değer veriye sahip olması gerekiyor.\n\n//? construtor içerisine state de kullanılacak ilk depğer oluşturulur\n\n//propsları değiştirilemeyen veriler için gönderirken state leri değiştirilebilir veriler için kullanılır\n\n\n// {this.props.children} = prop çağırma yöntemi\n// {this.state.showContent} = state çağırma yöntemi\n\n\n/*\n<a className='btn btn-primary w-100' data-toggle=\"collapse\" href={\"#\".concat(this.props.href)} role=\"button\" aria-expanded=\"false\" aria-controls='collapseExample'>\n    * boostrap hazır kodlarıyla kartların  açık olup olmayacağına karar veiyoruz\n*/\n\n\n/*\n{\n    this.state.showContent ? (\n        <div className='collapse show'>\n        {this.props.children}\n    \n       </div>\n    ) : null   \n}  * if döngüsü kurup  this.state = {\n    showContent : false\n} **durumuna göre  kartlar açık veya kapalı olacağı ayarlanacak\n\n*/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA,SAAAC,MAAA,IAAAC,OAAA;AAiCA,MAAMC,QAAQ,SAASH,KAAK,CAACI,SAAS,CAAC;EAEnCC,WAAWA,CAAA,EAAG;IACV,KAAK,EAAE;IAgBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IARA,KAWIC,QAAQ,GAAG,MAAM;MACb,IAAI,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAE,IAAI,CAACC,KAAK,CAACD;MAAY,CAAC,CAAC;IAC1D,CAAC;IA3BG,IAAI,CAACC,KAAK,GAAG;MACTD,WAAW,EAAEE;IACjB,CAAC;;IAED;AACR;AACA;AACA;AACA;;IAGO;EAEH;;EAeJ;EACA;;EAEAC,MAAMA,CAAA,EAAG;IAED,oBACIT,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAGW,SAAS,EAAC,uBAAuB;QAACC,OAAO,EAAE,IAAI,CAACR,QAAS;QAAAM,QAAA,EAAE;MAE9D;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EAGA,IAAI,CAACT,KAAK,CAACD,WAAW,gBAClBN,OAAA;QAAKW,SAAS,EAAC,eAAe;QAAAD,QAAA,EACzB,IAAI,CAACO,KAAK,CAACP;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAElB,GACN,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIV;EAEd;AAEJ;AAAC;AAGD,eAAef,QAAQ;;AAEvB;;AAEA;;AAEA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}